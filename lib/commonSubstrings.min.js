function SuffixTrie(e){this.options=e||{},this.structure={},this.debug=void 0===this.options.debug?!1:e.debug,this.minLENGTH=void 0===this.options.minLength?3:e.minLength,this.minOccurrence=void 0===this.options.minOccurrence?2:e.minOccurrence,this.isByLength=void 0===this.options.byLength?!1:e.byLength,this.save=[],this.array=null,this.labelArray=null,this.fragmentsArray=null,this.fragmentTrie={},this.rebuildArray}function findFragments(e,r,t,i,n,s){for(var a=t,o=e.split(""),h=0;h<o.length;h++){var l=o[h],u=a[l];if(h+1>=i){var f=e.substring(0,h+1);if(u.hasOwnProperty("listed")&&!u.listed){if(u.hasOwnProperty("source")){if(r[f]={},r[f].source=u.source,r[f].weight=u.weight,null==u.weight&&console.warn("escape case! fragment does not has weight property, node is ",r[f]),r.hasOwnProperty(f)&&s){for(var g in r)g!==f&&r.hasOwnProperty(g)&&r.hasOwnProperty(f)&&-1!==g.indexOf(f)&&(r[f].source=r[f].source.filter(function(e){return this.indexOf(e)<0},r[g].source));r[f].source.length<n&&delete r[f]}u.listed=!0}u.hasOwnProperty("next")&&findFragments(u.next,r,t,i,n,!0)}}a=u}}function deleteFragmentInLabelArray(e,r,t){var i=t[e[0]];i.hasOwnProperty(r)&&delete i[r]}function buildFragmentTrie(e,r){for(var t=0;t<r.length;t++)for(var i=r[t].name,n=i.split(""),s=e,a=0;a<n.length;a++){var o=n[a];s.hasOwnProperty(o)||(s[o]={}),s=s[o],a===n.length-1&&(s.source=r[t].source,s.name=r[t].name,s.weight=r[t].weight,s.list=!1)}}function removeTrie(e,r,t,i,n,s){for(var a in r)if(r.hasOwnProperty(a)&&1===a.length&&0===e.indexOf(a))if(1===e.length){if(r[a].hasOwnProperty("list")){var o={};o.source=r[a].source;var h=r[a].name;o.name=h,o.weight=r[a].weight,delete r[a].list,t.push(o),r[a].source.forEach(function(e){delete n[e][h];var r=i[e];s["delete"](r,e),r-=h.length,s.insert(r,e)})}}else removeTrie(e.slice(1),r[a],t,i,n,s)}function uniqueArray(e){for(var r=e.concat(),t=0;t<r.length;++t)for(var i=t+1;i<r.length;++i)r[t]===r[i]&&r.splice(i--,1);return r}var BinarySearchTree=require("./bst");SuffixTrie.prototype.refresh=function(){this.structure={},this.save=[],this.array=null,this.labelArray=null,this.fragmentsArray=null,this.fragmentTrie={},this.rebuildArray},SuffixTrie.prototype.weigh=function(){return this.isByLength?this.weighByMax():this.weighByAverage()},SuffixTrie.prototype.build=function(e){var r=this.debug;this.buildLabelTrie(e),this.optimize(this.structure),r&&console.log("after optimization our label trie of array length "+this.array.length+" is ",this.structure),this.listLabel(),r&&console.log("get the compressed label array (without duplicate fragments ) of array length "+this.array.length+" is ",this.labelArray),r&&console.log("and fragments array of length "+this.fragmentsArray.length+" is ",this.fragmentsArray),this.clearRedundantFragment(),r&&console.log("get the cleared label array (without duplicate fragments ) of array length "+this.array.length+" is ",this.labelArray),r&&console.log("and cleared fragments array of length "+this.fragmentsArray.length+" is ",this.fragmentsArray),this.rebuild(),r&&console.log("rebuild ended",this.rebuildArray)},SuffixTrie.prototype.buildLabelTrie=function(e){this.array=e;var r=this.structure,t=this.minLENGTH;e.forEach(function(e,i){for(var n=!0,s={},a=0,o=e.length;o-t>=a;a++)for(var h=r,l=e.substring(a),u=l.split(""),f=0;f<u.length;f++){var g=u[f],c=h[g];f===u.length-1?(null==c?h[g]={source:[i],listed:!1}:c.hasOwnProperty("source")?c.source.push(i):(h[g].source=[i],h[g].listed=!1),h=h[g],n?n=!1:s.next=l,s=h):h=null==c?h[g]={}:h[g]}})},SuffixTrie.prototype.optimize=function(e,r){var t=this.minOccurrence,i=[];r=void 0===r?-1:r,r++;var n=r>=this.minLENGTH;for(var s in e)if(e.hasOwnProperty(s))if(1===s.length){var a=this.optimize(e[s],r);n&&(i=i.concat(a))}else"source"===s&&n&&(i=i.concat(e.source));i=uniqueArray(i);var o=i.length>=t;if(n=n&&o){var h=1===Object.keys(e).length;h||(e.source=i,e.level=r,e.listed=!1,e.weight=i.length*r,i=[])}else delete e.source;return i},SuffixTrie.prototype.listLabel=function(e){var r=this.array,t=this.structure,i=[],n=[],s=this.minLENGTH,a=this.minOccurrence;e=void 0===e?1:e;for(var o=e-1,h=0;h<r.length;o++,o%=r.length,h++){var l=r[o],u={};if(l.length<s)i.push(u);else{findFragments(l,u,t,s,a,!1);for(var f in u)if(u.hasOwnProperty(f)){var g=n.push(u[f])-1;n[g].name=f}i.push(u)}}return this.labelArray=i,this.fragmentsArray=n,i},SuffixTrie.prototype.rebuild=function(){var e=JSON.parse(JSON.stringify(this.labelArray));e.forEach(function(r,t){for(var i in r)r.hasOwnProperty(i)&&r[i].source.forEach(function(n){n>t&&(e[n][i]=r[i])})}),this.rebuildArray=e},SuffixTrie.prototype.weighByAverage=function(){var e=this.debug,r=this.fragmentsArray,t=this.fragmentsArray.length;return r.sort(function(e,r){return r.weight-e.weight}),e&&console.log("weigh by average:  result of length "+t+" is",r),"number"==typeof this.options.limit&&(t=this.options.limit<t?this.options.limit:t),r.slice(0,t)},SuffixTrie.prototype.weighByMax=function(){var e=this.debug;buildFragmentTrie(this.fragmentTrie,this.fragmentsArray);var r=JSON.parse(JSON.stringify(this.rebuildArray)),t=[],i=this.fragmentTrie,n=this.fragmentsArray.length,s=this.array.map(function(e){return e.length}),a=new BinarySearchTree;for(s.forEach(function(e,r){a.insert(e,r)}),"number"==typeof this.options.limit&&(n=this.options.limit<n?this.options.limit:n);t.length<n;){var o=a.getMaxKey(),h=a.search(o);if(0!==h.length){var l=h[0],u=Object.keys(r[l]);u.length>0&&(u.sort(function(e,r){return r.length-e.length}),removeTrie(u[0],i,t,s,r,a)),a["delete"](o,l)}else a["delete"](o)}return this.fragmentsArray=t,e&&console.log("weigh by max:  result of length "+t.length+" is",t),t.slice(0,n)},SuffixTrie.prototype.clearRedundantFragment=function(){var e=this.fragmentsArray,r=this.minOccurrence,t=[],i=this.labelArray;e.sort(function(e,r){return e.name.length-r.name.length}),e.forEach(function(n,s){for(var a=n.source.slice(),o=s+1;o<e.length;o++){var h=e[o];-1!==h.name.indexOf(n.name)&&(n.source=n.source.filter(function(e){return-1===this.indexOf(e)},h.source))}n.source.length>=r?t.push(n):a.length!==n.source.length&&deleteFragmentInLabelArray(a,n.name,i)}),this.fragmentsArray=t},module.exports=SuffixTrie;